package de.bachd.bigdata;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

import org.apache.hadoop.io.Text;
import org.apache.hadoop.io.WritableComparable;

public class Column implements WritableComparable<Column> {
	private Text attributeName;
	private Text domain; // Integer/String/Double

	public Column() {
		attributeName = new Text();
		domain = new Text();
	}

	public Column(String attributeName, String domain) {
		this.attributeName = new Text(attributeName);
		this.domain = new Text(domain);
	}

	public void setName(String attributeName) {
		this.attributeName = new Text(attributeName);
	}

	public void setDomain(String domain) {
		this.attributeName = new Text(domain);
	}

	public Text getAttributeName() {
		return attributeName;
	}

	public Text getDomain() {
		return domain;
	}

	@Override
	public String toString() {
		return attributeName.toString() + ":" + domain.toString();
	}

	@Override
	public void readFields(DataInput in) throws IOException {
		attributeName.readFields(in);
		domain.readFields(in);
	}

	@Override
	public void write(DataOutput out) throws IOException {
		attributeName.write(out);
		domain.write(out);
	}

	@Override
	public int compareTo(Column arg0) {
		if (this.attributeName.getLength() < arg0.getAttributeName().getLength()) {
			return -1;
		} else if (this.attributeName.getLength() == arg0.getAttributeName().getLength()) {
			return 0;
		} else {
			return 1;
		}
	}
}
