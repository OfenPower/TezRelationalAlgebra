package de.bachd.bigdata.tez;

import org.apache.hadoop.io.Text;
import org.apache.tez.runtime.api.ProcessorContext;
import org.apache.tez.runtime.library.api.KeyValueWriter;
import org.apache.tez.runtime.library.api.KeyValuesReader;
import org.apache.tez.runtime.library.processor.SimpleProcessor;

public class MergeJoinProcessor extends SimpleProcessor {

	private String leftJoinVertexName;
	private String rightJoinVertexName;
	private String leftJoinAttribute;
	private String rightJoinAttribute;

	public MergeJoinProcessor(ProcessorContext context) {
		super(context);
	}

	@Override
	public void run() throws Exception {
		// KeyValueReader und Writer initialisieren
		KeyValuesReader kvsReader1 = (KeyValuesReader) getInputs().get(leftJoinVertexName).getReader();
		KeyValuesReader kvsReader2 = (KeyValuesReader) getInputs().get(rightJoinVertexName).getReader();
		KeyValueWriter kvWriter = (KeyValueWriter) getOutputs().values().iterator().next().getWriter();

		while (kvsReader1.next() && kvsReader2.next()) {
			// Werte der Joinattribute holen
			Text value1 = (Text) kvsReader1.getCurrentKey();
			Text value2 = (Text) kvsReader2.getCurrentKey();
			boolean reachedEnd = false;

			// Solange die Werte unterschiedlich sind, werden die beiden Zeiger
			// unterschiedlich weiter bewegt
			while (value1.compareTo(value2) != 0) {
				// Wenn value1 < value2 => nächsten Wert aus kevsReader1 holen!
				if (value1.compareTo(value2) < 0) {
					if (kvsReader1.next()) {
						value1 = (Text) kvsReader1.getCurrentKey();
					} else {
						reachedEnd = true;
						break;
					}
				} else {
					// Wenn value1 > value2 => nächsten Wert aus kevsReader2
					// holen!
					if (kvsReader2.next()) {
						value2 = (Text) kvsReader2.getCurrentKey();
					} else {
						reachedEnd = true;
						break;
					}
				}
			}

			// Wenn eine der Eingaben erschöpft ist, wird aus der Schleife
			// ausgebrochen, da kein Joinpartner mehr vorhanden ist!
			if (reachedEnd) {
				break;
			}

			// Join durchführen!
			for(Object obj1 : kvsReader1.getCurrentValues()) {
				for(Object obj2 : kvsReader2.getCurrentValues()) {
					
				}
			}

		}

	}

	@Override
	public void initialize() {
		System.out.println("Initialize MergeJoinProcessor");
	}

}
