package de.bachd.bigdata.streams;

public abstract class Stream<T> {
	// Vorg√§nger
	protected Stream<T> stream;

	public abstract T process();

	public Stream(Stream<T> stream) {
		this.stream = stream;
	}

	public Stream<T> filter(Predicater<T> pred) {
		return new FilterStream<T>(this, pred);
	}

	public Stream<T> peek(Applier<T> mapper) {
		return new PeekStream<T>(this, mapper);
	}

	public void forEach(Applier<T> cons) {
		T t;
		while ((t = process()) != null) {
			cons.apply(t);
		}
	}
}
